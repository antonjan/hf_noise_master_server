{
  "_args": [
    [
      "dygraphs",
      "/home/anton/html/hf_noise/graph"
    ]
  ],
  "_from": "dygraphs",
  "_id": "dygraphs@2.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/dygraphs",
  "_phantomChildren": {},
  "_requested": {
    "name": null,
    "raw": "dygraphs",
    "rawSpec": "dygraphs",
    "scope": null,
    "spec": "/home/anton/html/hf_noise/graph/dygraphs",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:dygraphs",
  "_shasum": "e5258c667fa3516d00cae42e31116c151360e3de",
  "_shrinkwrap": null,
  "_spec": "dygraphs",
  "_where": "/home/anton/html/hf_noise/graph",
  "author": {
    "name": "Dan Vanderkam",
    "url": "danvdk@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/danvk/dygraphs/issues"
  },
  "dependencies": {},
  "description": "dygraphs is a fast, flexible open source JavaScript charting library.",
  "devDependencies": {
    "babel": "^5.8.23",
    "babel-core": "^5.8.25",
    "babelify": "^6.3.0",
    "browserify": "^11.2.0",
    "browserify-header": "^0.9.2",
    "chai": "^3.3.0",
    "clean-css": "^3.4.23",
    "core-js": "^2.4.1",
    "coveralls": "^2.11.2",
    "envify": "^3.4.0",
    "exorcist": "^0.4.0",
    "http-server": "^0.8.5",
    "istanbul": "^0.4.0",
    "jshint": "^2.5.10",
    "lcov-parse": "0.0.9",
    "mocha": "^2.1.0",
    "mocha-phantomjs": "3.5.3",
    "mocha-phantomjs-istanbul": "0.0.2",
    "parse-data-uri": "^0.2.0",
    "phantomjs": "^1.9.7-8",
    "pre-commit": "^1.0.6",
    "source-map": "^0.4.2",
    "uglify-js": "^2.5.0",
    "watchify": "^3.4.0"
  },
  "files": [
    "dist",
    "docs",
    "index.es5.js",
    "index.js",
    "src",
    "src-es5"
  ],
  "gitHead": "da2a028fc41e5573868358b3d9eda9826211d217",
  "homepage": "https://github.com/danvk/dygraphs",
  "jsnext:main": "index",
  "keywords": [
    "canvas",
    "chart",
    "dygraphs",
    "javascript",
    "timeseries",
    "visualization"
  ],
  "license": "MIT",
  "main": "index.es5",
  "module": "index",
  "name": "dygraphs",
  "optionalDependencies": {},
  "pre-commit": [
    "tests-ok"
  ],
  "readme": "[![Build Status](https://travis-ci.org/danvk/dygraphs.svg?branch=markdown-readme)](https://travis-ci.org/danvk/dygraphs) [![Coverage Status](https://img.shields.io/coveralls/danvk/dygraphs.svg)](https://coveralls.io/r/danvk/dygraphs)\n# dygraphs JavaScript charting library\n\nThe dygraphs JavaScript library produces interactive, zoomable charts of time series:\n\n<img src=\"https://cloud.githubusercontent.com/assets/98301/5311286/eb760eea-7c10-11e4-9a59-1d144e51a15b.png\" width=\"618\" height=\"322\">\n\nLearn more about it at [dygraphs.com](http://www.dygraphs.com).\n\nGet help with dygraphs by browsing the  on [Stack Overflow][] (preferred) and [Google Groups][].\n\n## Features\n* Plots time series without using an external server or Flash\n* Supports [error bands][] around data series\n* Interactive [pan and zoom][]\n* Displays values [on mouseover][]\n* Adjustable [averaging period][]\n* Extensive set of [options][] for customization.\n* Compatible with the [Google Visualization API][gviz]\n\n## Minimal Example\n```html\n<html>\n<head>\n<script type=\"text/javascript\" src=\"dygraph.js\"></script>\n<link rel=\"stylesheet\" href=\"dygraph.css\" />\n</head>\n<body>\n<div id=\"graphdiv\"></div>\n<script type=\"text/javascript\">\n  g = new Dygraph(\n        document.getElementById(\"graphdiv\"),  // containing div\n        \"Date,Temperature\\n\" +                // the data series\n        \"2008-05-07,75\\n\" +\n        \"2008-05-08,70\\n\" +\n        \"2008-05-09,80\\n\",\n        { }                                   // the options\n      );\n</script>\n</body>\n</html>\n```\n\nLearn more by reading [the tutorial][] and seeing demonstrations of what\ndygraphs can do in the [gallery][]. You can get `dygraph.js` and `dygraph.css`\nfrom [cdnjs][] or [from NPM][npm] (see below).\n\n## Usage with a module loader\n\nGet dygraphs from NPM:\n\n    npm install dygraphs\n\nYou'll find pre-built JS & CSS files in `node_modules/dygraphs/dist`. If you're\nusing a module bundler like browserify or webpack, you can import dygraphs:\n\n```js\nimport Dygraph from 'dygraphs';\n// or: const Dygraph = require('dygraphs');\n\nconst g = new Dygraph('graphdiv', data, { /* options */ });\n```\n\nCheck out the [dygraphs-es6 repo][] for a fully-worked example.\n\n## Development\n\nTo get going, clone the repo and run:\n\n    npm install\n    npm run build\n\nThen open `tests/demo.html` in your browser.\n\nRead more about the dygraphs development process in the [developer guide](/DEVELOP.md).\n\n## License(s)\ndygraphs is available under the MIT license, included in LICENSE.txt.\n\n[cdnjs]: https://cdnjs.com/libraries/dygraph\n[the tutorial]: http://www.dygraphs.com/tutorial.html\n[gallery]: http://www.dygraphs.com/gallery\n[error bands]: http://dygraphs.com/tests/legend-values.html\n[pan and zoom]: http://dygraphs.com/tests/link-interaction.html\n[on mouseover]: http://dygraphs.com/tests/legend-values.html\n[averaging period]: http://dygraphs.com/tests/temperature-sf-ny.html\n[options]: http://www.dygraphs.com/options.html\n[Stack Overflow]: http://stackoverflow.com/questions/tagged/dygraphs?sort=votes&pageSize=50\n[Google Groups]: http://groups.google.com/group/dygraphs-users\n[gviz]: http://dygraphs.com/data.html#datatable\n[npm]: https://www.npmjs.com/package/dygraphs\n[dygraphs-es6 repo]: https://github.com/danvk/dygraphs-es6\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/danvk/dygraphs.git"
  },
  "scripts": {
    "build": "./scripts/build.sh",
    "build-tests": "./scripts/build-tests.sh",
    "coverage": "./scripts/generate-coverage.sh",
    "test": "./scripts/run-tests.sh",
    "tests-ok": "./scripts/check-no-only.sh",
    "watch": "./scripts/watch.sh"
  },
  "version": "2.1.0"
}
